server:
  port: 8080

spring:
  application:
    name: generator
  main:
    allow-bean-definition-overriding: true
  datasource:
    url: jdbc:postgresql://xxxx:5432/jdd2db?currentSchema=jdd2db
    username: xxxx
    password: xxxx
    hikari:
      pool-name: DATA-ACCUMULATION-CP
      minimum-idle: 5
      idle-timeout: 600000
      maximum-pool-size: 10
      auto-commit: true
      connection-timeout: 30000
      max-lifetime: 1800000
  data:
    # Redis 配置。Redisson 默认的配置足够使用，一般不需要进行调优
    redis:
      host: 43.138.169.251 # 地址
      port: 6379 # 端口
      database: 0 # 数据库索引
    #    timeout: 5000
    #    password: dev # 密码，建议生产环境开启
#指定接口包扫描
springdoc:
  packagesToScan: com.example.generator.web.controller
  swagger-ui:
    disable-swagger-default-url: true
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs
    enabled: true
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.xiaominfo.knife4j.demo.web
# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_cn
  basic:
    enable: true
    username: admin
    password: admin
#mybatis
mybatisPlus:
  mapperLocations: classpath:mapper/*.xml
  globalConfig:
    dbConfig:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: AUTO
      logic-delete-field: deleted
      logic-delete-value: 0 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 1 # 逻辑未删除值(默认为 0)
      #驼峰下划线转换
      table-underline: true
  configuration:
      use-actual-param-name: true
      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true
#日志
logging:
  level:
    info-level: info
    root: info
    sql: info
    server: info

